/** \file
 *  This C header file was generated by $ANTLR version 3.2 debian-7ubuntu3
 *
 *     -  From the grammar source file : MySQL.g
 *     -                            On : 2015-01-05 19:17:14
 *     -                 for the lexer : MySQLLexerLexer *
 * Editing it, at least manually, is not wise. 
 *
 * C language generator and runtime by Jim Idle, jimi|hereisanat|idle|dotgoeshere|ws.
 *
 *
 * The lexer MySQLLexer has the callable functions (rules) shown below,
 * which will invoke the code for the associated rule in the source grammar
 * assuming that the input stream is pointing to a token/text stream that could begin
 * this rule.
 * 
 * For instance if you call the first (topmost) rule in a parser grammar, you will
 * get the results of a full parse, but calling a rule half way through the grammar will
 * allow you to pass part of a full token stream to the parser, such as for syntax checking
 * in editors and so on.
 *
 * The parser entry points are called indirectly (by function pointer to function) via
 * a parser context typedef pMySQLLexer, which is returned from a call to MySQLLexerNew().
 *
 * As this is a generated lexer, it is unlikely you will call it 'manually'. However
 * the methods are provided anyway.
 * * The methods in pMySQLLexer are  as follows:
 *
 *  -  void      pMySQLLexer->A_(pMySQLLexer)
 *  -  void      pMySQLLexer->B_(pMySQLLexer)
 *  -  void      pMySQLLexer->C_(pMySQLLexer)
 *  -  void      pMySQLLexer->D_(pMySQLLexer)
 *  -  void      pMySQLLexer->E_(pMySQLLexer)
 *  -  void      pMySQLLexer->F_(pMySQLLexer)
 *  -  void      pMySQLLexer->G_(pMySQLLexer)
 *  -  void      pMySQLLexer->H_(pMySQLLexer)
 *  -  void      pMySQLLexer->I_(pMySQLLexer)
 *  -  void      pMySQLLexer->J_(pMySQLLexer)
 *  -  void      pMySQLLexer->K_(pMySQLLexer)
 *  -  void      pMySQLLexer->L_(pMySQLLexer)
 *  -  void      pMySQLLexer->M_(pMySQLLexer)
 *  -  void      pMySQLLexer->N_(pMySQLLexer)
 *  -  void      pMySQLLexer->O_(pMySQLLexer)
 *  -  void      pMySQLLexer->P_(pMySQLLexer)
 *  -  void      pMySQLLexer->Q_(pMySQLLexer)
 *  -  void      pMySQLLexer->R_(pMySQLLexer)
 *  -  void      pMySQLLexer->S_(pMySQLLexer)
 *  -  void      pMySQLLexer->T_(pMySQLLexer)
 *  -  void      pMySQLLexer->U_(pMySQLLexer)
 *  -  void      pMySQLLexer->V_(pMySQLLexer)
 *  -  void      pMySQLLexer->W_(pMySQLLexer)
 *  -  void      pMySQLLexer->X_(pMySQLLexer)
 *  -  void      pMySQLLexer->Y_(pMySQLLexer)
 *  -  void      pMySQLLexer->Z_(pMySQLLexer)
 *  -  void      pMySQLLexer->ABS(pMySQLLexer)
 *  -  void      pMySQLLexer->ACCESSIBLE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ACOS(pMySQLLexer)
 *  -  void      pMySQLLexer->ACTION(pMySQLLexer)
 *  -  void      pMySQLLexer->ADD_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ADDDATE(pMySQLLexer)
 *  -  void      pMySQLLexer->ADDTIME(pMySQLLexer)
 *  -  void      pMySQLLexer->AES_DECRYPT(pMySQLLexer)
 *  -  void      pMySQLLexer->AES_ENCRYPT(pMySQLLexer)
 *  -  void      pMySQLLexer->AFTER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->AGAINST(pMySQLLexer)
 *  -  void      pMySQLLexer->AGGREGATE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ALGORITHM_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ALL(pMySQLLexer)
 *  -  void      pMySQLLexer->ALTER(pMySQLLexer)
 *  -  void      pMySQLLexer->ANALYZE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ANY(pMySQLLexer)
 *  -  void      pMySQLLexer->ARMSCII8(pMySQLLexer)
 *  -  void      pMySQLLexer->AS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ASC(pMySQLLexer)
 *  -  void      pMySQLLexer->ASCII_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ASENSITIVE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ASIN(pMySQLLexer)
 *  -  void      pMySQLLexer->AT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ATAN(pMySQLLexer)
 *  -  void      pMySQLLexer->ATAN2(pMySQLLexer)
 *  -  void      pMySQLLexer->AUTHORS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->AUTO_INCREMENT(pMySQLLexer)
 *  -  void      pMySQLLexer->AUTOEXTEND_SIZE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->AVG(pMySQLLexer)
 *  -  void      pMySQLLexer->AVG_ROW_LENGTH(pMySQLLexer)
 *  -  void      pMySQLLexer->BACKUP_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->BEFORE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->BEGIN_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->BENCHMARK(pMySQLLexer)
 *  -  void      pMySQLLexer->BETWEEN(pMySQLLexer)
 *  -  void      pMySQLLexer->BIG5(pMySQLLexer)
 *  -  void      pMySQLLexer->BIGINT(pMySQLLexer)
 *  -  void      pMySQLLexer->BIN(pMySQLLexer)
 *  -  void      pMySQLLexer->BINARY(pMySQLLexer)
 *  -  void      pMySQLLexer->BINLOG_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->BIT_AND(pMySQLLexer)
 *  -  void      pMySQLLexer->BIT_LENGTH(pMySQLLexer)
 *  -  void      pMySQLLexer->BIT_OR(pMySQLLexer)
 *  -  void      pMySQLLexer->BIT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->BIT_XOR(pMySQLLexer)
 *  -  void      pMySQLLexer->BLOB_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->BLOCK_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->BOOL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->BOOLEAN_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->BOTH(pMySQLLexer)
 *  -  void      pMySQLLexer->BTREE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->BY_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->BYTE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CACHE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CALL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CASCADE(pMySQLLexer)
 *  -  void      pMySQLLexer->CASCADED(pMySQLLexer)
 *  -  void      pMySQLLexer->CASE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CAST_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CEIL(pMySQLLexer)
 *  -  void      pMySQLLexer->CEILING(pMySQLLexer)
 *  -  void      pMySQLLexer->CHAIN_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CHANGE(pMySQLLexer)
 *  -  void      pMySQLLexer->CHANGED(pMySQLLexer)
 *  -  void      pMySQLLexer->CHAR(pMySQLLexer)
 *  -  void      pMySQLLexer->CHAR_LENGTH(pMySQLLexer)
 *  -  void      pMySQLLexer->CHARACTER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CHARSET(pMySQLLexer)
 *  -  void      pMySQLLexer->CHECK_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CHECKSUM_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CIPHER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CLIENT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CLOSE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->COALESCE(pMySQLLexer)
 *  -  void      pMySQLLexer->CODE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->COERCIBILITY(pMySQLLexer)
 *  -  void      pMySQLLexer->COLLATE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->COLLATION(pMySQLLexer)
 *  -  void      pMySQLLexer->COLUMN_FORMAT(pMySQLLexer)
 *  -  void      pMySQLLexer->COLUMN_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->COLUMNS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->COMMENT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->COMMIT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->COMMITTED_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->COMPACT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->COMPLETION_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->COMPRESS(pMySQLLexer)
 *  -  void      pMySQLLexer->COMPRESSED_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CONCAT(pMySQLLexer)
 *  -  void      pMySQLLexer->CONCAT_WS(pMySQLLexer)
 *  -  void      pMySQLLexer->CONCURRENT(pMySQLLexer)
 *  -  void      pMySQLLexer->CONDITION_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CONNECTION_ID(pMySQLLexer)
 *  -  void      pMySQLLexer->CONNECTION_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CONSISTENT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CONSTRAINT(pMySQLLexer)
 *  -  void      pMySQLLexer->CONTAINS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CONTEXT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CONTINUE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CONTRIBUTORS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CONV(pMySQLLexer)
 *  -  void      pMySQLLexer->CONVERT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CONVERT_TZ(pMySQLLexer)
 *  -  void      pMySQLLexer->COPY_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->COS(pMySQLLexer)
 *  -  void      pMySQLLexer->COT(pMySQLLexer)
 *  -  void      pMySQLLexer->COUNT(pMySQLLexer)
 *  -  void      pMySQLLexer->CP1250(pMySQLLexer)
 *  -  void      pMySQLLexer->CP1251(pMySQLLexer)
 *  -  void      pMySQLLexer->CP1256(pMySQLLexer)
 *  -  void      pMySQLLexer->CP1257(pMySQLLexer)
 *  -  void      pMySQLLexer->CP850(pMySQLLexer)
 *  -  void      pMySQLLexer->CP852(pMySQLLexer)
 *  -  void      pMySQLLexer->CP866(pMySQLLexer)
 *  -  void      pMySQLLexer->CP932(pMySQLLexer)
 *  -  void      pMySQLLexer->CPU_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CRC32(pMySQLLexer)
 *  -  void      pMySQLLexer->CREATE(pMySQLLexer)
 *  -  void      pMySQLLexer->CROSECOND(pMySQLLexer)
 *  -  void      pMySQLLexer->CROSS(pMySQLLexer)
 *  -  void      pMySQLLexer->CUBE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CURDATE(pMySQLLexer)
 *  -  void      pMySQLLexer->CURRENT_TIMESTAMP(pMySQLLexer)
 *  -  void      pMySQLLexer->CURRENT_USER(pMySQLLexer)
 *  -  void      pMySQLLexer->CURSOR_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->CURTIME(pMySQLLexer)
 *  -  void      pMySQLLexer->DATABASE(pMySQLLexer)
 *  -  void      pMySQLLexer->DATAFILE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DATA_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DATE_ADD(pMySQLLexer)
 *  -  void      pMySQLLexer->DATE_FORMAT(pMySQLLexer)
 *  -  void      pMySQLLexer->DATE_SUB(pMySQLLexer)
 *  -  void      pMySQLLexer->DATE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DATEDIFF(pMySQLLexer)
 *  -  void      pMySQLLexer->DATETIME(pMySQLLexer)
 *  -  void      pMySQLLexer->DAY_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DAY_HOUR(pMySQLLexer)
 *  -  void      pMySQLLexer->DAY_MICROSECOND(pMySQLLexer)
 *  -  void      pMySQLLexer->DAY_MINUTE(pMySQLLexer)
 *  -  void      pMySQLLexer->DAY_SECOND(pMySQLLexer)
 *  -  void      pMySQLLexer->DAYNAME(pMySQLLexer)
 *  -  void      pMySQLLexer->DAYOFMONTH(pMySQLLexer)
 *  -  void      pMySQLLexer->DAYOFWEEK(pMySQLLexer)
 *  -  void      pMySQLLexer->DAYOFYEAR(pMySQLLexer)
 *  -  void      pMySQLLexer->DEALLOCATE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DEC8(pMySQLLexer)
 *  -  void      pMySQLLexer->DECIMAL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DECLARE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DECODE(pMySQLLexer)
 *  -  void      pMySQLLexer->DEFAULT(pMySQLLexer)
 *  -  void      pMySQLLexer->DEFINER(pMySQLLexer)
 *  -  void      pMySQLLexer->DEGREES(pMySQLLexer)
 *  -  void      pMySQLLexer->DELAY_KEY_WRITE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DELAYED_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DELETE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DES_DECRYPT(pMySQLLexer)
 *  -  void      pMySQLLexer->DES_ENCRYPT(pMySQLLexer)
 *  -  void      pMySQLLexer->DES_KEY_FILE(pMySQLLexer)
 *  -  void      pMySQLLexer->DESC(pMySQLLexer)
 *  -  void      pMySQLLexer->DETERMINISTIC_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DIRECTORY_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DISABLE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DISCARD(pMySQLLexer)
 *  -  void      pMySQLLexer->DISK_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DISTINCT(pMySQLLexer)
 *  -  void      pMySQLLexer->DISTINCTROW(pMySQLLexer)
 *  -  void      pMySQLLexer->DO_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DOUBLE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DROP(pMySQLLexer)
 *  -  void      pMySQLLexer->DUAL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DUMPFILE(pMySQLLexer)
 *  -  void      pMySQLLexer->DUPLICATE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->DYNAMIC_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->EACH_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ELSE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ELSIF_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ELT(pMySQLLexer)
 *  -  void      pMySQLLexer->ENABLE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ENCLOSED(pMySQLLexer)
 *  -  void      pMySQLLexer->ENCODE(pMySQLLexer)
 *  -  void      pMySQLLexer->ENCRYPT(pMySQLLexer)
 *  -  void      pMySQLLexer->END_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ENDS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ENGINE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ENGINES_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ENUM(pMySQLLexer)
 *  -  void      pMySQLLexer->ERRORS(pMySQLLexer)
 *  -  void      pMySQLLexer->ESCAPE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ESCAPED(pMySQLLexer)
 *  -  void      pMySQLLexer->EUCJPMS(pMySQLLexer)
 *  -  void      pMySQLLexer->EUCKR(pMySQLLexer)
 *  -  void      pMySQLLexer->EVENT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->EVENTS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->EVERY_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->EXCHANGE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->EXECUTE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->EXCLUSIVE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->EXISTS(pMySQLLexer)
 *  -  void      pMySQLLexer->EXIT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->EXP(pMySQLLexer)
 *  -  void      pMySQLLexer->EXPANSION_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->EXPORT_SET(pMySQLLexer)
 *  -  void      pMySQLLexer->EXTENDED_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->EXTENT_SIZE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->EXTRACT(pMySQLLexer)
 *  -  void      pMySQLLexer->FALSE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->FAST_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->FAULTS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->FIELDS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->FETCH_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->FIELD(pMySQLLexer)
 *  -  void      pMySQLLexer->FILE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->FIND_IN_SET(pMySQLLexer)
 *  -  void      pMySQLLexer->FIRST_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->FIXED_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->FLOAT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->FLOOR(pMySQLLexer)
 *  -  void      pMySQLLexer->FLUSH_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->FOR_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->FORCE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->FOREIGN(pMySQLLexer)
 *  -  void      pMySQLLexer->FORMAT(pMySQLLexer)
 *  -  void      pMySQLLexer->FOUND_ROWS(pMySQLLexer)
 *  -  void      pMySQLLexer->FOUND_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->FROM(pMySQLLexer)
 *  -  void      pMySQLLexer->FROM_BASE64(pMySQLLexer)
 *  -  void      pMySQLLexer->FROM_DAYS(pMySQLLexer)
 *  -  void      pMySQLLexer->FROM_UNIXTIME(pMySQLLexer)
 *  -  void      pMySQLLexer->FULL(pMySQLLexer)
 *  -  void      pMySQLLexer->FULLTEXT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->FUNCTION_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->GB2312(pMySQLLexer)
 *  -  void      pMySQLLexer->GBK(pMySQLLexer)
 *  -  void      pMySQLLexer->GEOMETRY_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->GEOMETRYCOLLECTION(pMySQLLexer)
 *  -  void      pMySQLLexer->GEOSTD8(pMySQLLexer)
 *  -  void      pMySQLLexer->GET_FORMAT(pMySQLLexer)
 *  -  void      pMySQLLexer->GET_LOCK(pMySQLLexer)
 *  -  void      pMySQLLexer->GLOBAL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->GRANT(pMySQLLexer)
 *  -  void      pMySQLLexer->GRANTS(pMySQLLexer)
 *  -  void      pMySQLLexer->GREEK(pMySQLLexer)
 *  -  void      pMySQLLexer->GROUP_CONCAT(pMySQLLexer)
 *  -  void      pMySQLLexer->GROUP_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->HANDLER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->HASH_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->HAVING(pMySQLLexer)
 *  -  void      pMySQLLexer->HEBREW(pMySQLLexer)
 *  -  void      pMySQLLexer->HELP_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->HEX(pMySQLLexer)
 *  -  void      pMySQLLexer->HIGH_PRIORITY(pMySQLLexer)
 *  -  void      pMySQLLexer->HOST_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->HOSTS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->HOUR(pMySQLLexer)
 *  -  void      pMySQLLexer->HOUR_MICROSECOND(pMySQLLexer)
 *  -  void      pMySQLLexer->HOUR_MINUTE(pMySQLLexer)
 *  -  void      pMySQLLexer->HOUR_SECOND(pMySQLLexer)
 *  -  void      pMySQLLexer->HP8(pMySQLLexer)
 *  -  void      pMySQLLexer->IDENTIFIED_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->IF(pMySQLLexer)
 *  -  void      pMySQLLexer->IFNULL(pMySQLLexer)
 *  -  void      pMySQLLexer->IGNORE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->IMPORT(pMySQLLexer)
 *  -  void      pMySQLLexer->IN_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->INDEX_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->INDEXES(pMySQLLexer)
 *  -  void      pMySQLLexer->INET_ATON(pMySQLLexer)
 *  -  void      pMySQLLexer->INET_NTOA(pMySQLLexer)
 *  -  void      pMySQLLexer->INFILE(pMySQLLexer)
 *  -  void      pMySQLLexer->INITIAL_SIZE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->INNER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->INOUT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->INPLACE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->INSENSITIVE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->INSERT(pMySQLLexer)
 *  -  void      pMySQLLexer->INSERT_METHOD(pMySQLLexer)
 *  -  void      pMySQLLexer->INSTALL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->INSTR(pMySQLLexer)
 *  -  void      pMySQLLexer->INT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->INTEGER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->INTERVAL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->INTO(pMySQLLexer)
 *  -  void      pMySQLLexer->INVOKER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->IO_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->IPC_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->IS_FREE_LOCK(pMySQLLexer)
 *  -  void      pMySQLLexer->IS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->IS_USED_LOCK(pMySQLLexer)
 *  -  void      pMySQLLexer->ISOLATION(pMySQLLexer)
 *  -  void      pMySQLLexer->ISSUER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ITERATE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->JOIN_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->KEY_BLOCK_SIZE(pMySQLLexer)
 *  -  void      pMySQLLexer->KEY_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->KEYBCS2(pMySQLLexer)
 *  -  void      pMySQLLexer->KEYS(pMySQLLexer)
 *  -  void      pMySQLLexer->KILL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->KOI8R(pMySQLLexer)
 *  -  void      pMySQLLexer->KOI8U(pMySQLLexer)
 *  -  void      pMySQLLexer->LANGUAGE(pMySQLLexer)
 *  -  void      pMySQLLexer->LAST_DAY(pMySQLLexer)
 *  -  void      pMySQLLexer->LAST_INSERT_ID(pMySQLLexer)
 *  -  void      pMySQLLexer->LAST_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->LATIN1_BIN(pMySQLLexer)
 *  -  void      pMySQLLexer->LATIN1_GENERAL_CS(pMySQLLexer)
 *  -  void      pMySQLLexer->LATIN1(pMySQLLexer)
 *  -  void      pMySQLLexer->LATIN2(pMySQLLexer)
 *  -  void      pMySQLLexer->LATIN5(pMySQLLexer)
 *  -  void      pMySQLLexer->LATIN7(pMySQLLexer)
 *  -  void      pMySQLLexer->LEADING(pMySQLLexer)
 *  -  void      pMySQLLexer->LEAVE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->LEAVES(pMySQLLexer)
 *  -  void      pMySQLLexer->LEFT(pMySQLLexer)
 *  -  void      pMySQLLexer->LENGTH(pMySQLLexer)
 *  -  void      pMySQLLexer->LESS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->LEVEL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->LIKE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->LIMIT(pMySQLLexer)
 *  -  void      pMySQLLexer->LINEAR_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->LINES(pMySQLLexer)
 *  -  void      pMySQLLexer->LINESTRING(pMySQLLexer)
 *  -  void      pMySQLLexer->LIST_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->LN(pMySQLLexer)
 *  -  void      pMySQLLexer->LOAD(pMySQLLexer)
 *  -  void      pMySQLLexer->LOAD_FILE(pMySQLLexer)
 *  -  void      pMySQLLexer->LOCAL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->LOCATE(pMySQLLexer)
 *  -  void      pMySQLLexer->LOCK(pMySQLLexer)
 *  -  void      pMySQLLexer->LOCKS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->LOG(pMySQLLexer)
 *  -  void      pMySQLLexer->LOG10(pMySQLLexer)
 *  -  void      pMySQLLexer->LOG2(pMySQLLexer)
 *  -  void      pMySQLLexer->LOGFILE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->LOGS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->LONG_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->LONGBLOB(pMySQLLexer)
 *  -  void      pMySQLLexer->LONGTEXT(pMySQLLexer)
 *  -  void      pMySQLLexer->LOOP_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->LOW_PRIORITY(pMySQLLexer)
 *  -  void      pMySQLLexer->LOWER(pMySQLLexer)
 *  -  void      pMySQLLexer->LPAD(pMySQLLexer)
 *  -  void      pMySQLLexer->LTRIM(pMySQLLexer)
 *  -  void      pMySQLLexer->MACCE(pMySQLLexer)
 *  -  void      pMySQLLexer->MACROMAN(pMySQLLexer)
 *  -  void      pMySQLLexer->MAKE_SET(pMySQLLexer)
 *  -  void      pMySQLLexer->MAKEDATE(pMySQLLexer)
 *  -  void      pMySQLLexer->MAKETIME(pMySQLLexer)
 *  -  void      pMySQLLexer->MASTER_CONNECT_RETRY(pMySQLLexer)
 *  -  void      pMySQLLexer->MASTER_HOST_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MASTER_LOG_FILE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MASTER_LOG_POS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MASTER_PASSWORD_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MASTER_PORT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MASTER_POS_WAIT(pMySQLLexer)
 *  -  void      pMySQLLexer->MASTER_SERVER_ID_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MASTER_SSL_CA_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MASTER_SSL_CAPATH_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MASTER_SSL_CERT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MASTER_SSL_CIPHER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MASTER_SSL_KEY_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MASTER_SSL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MASTER_SSL_VERIFY_SERVER_CERT(pMySQLLexer)
 *  -  void      pMySQLLexer->MASTER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MASTER_USER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MATCH(pMySQLLexer)
 *  -  void      pMySQLLexer->MAX_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MAX_CONNECTIONS_PER_HOUR(pMySQLLexer)
 *  -  void      pMySQLLexer->MAX_QUERIES_PER_HOUR(pMySQLLexer)
 *  -  void      pMySQLLexer->MAX_ROWS(pMySQLLexer)
 *  -  void      pMySQLLexer->MAX_SIZE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MAX_UPDATES_PER_HOUR(pMySQLLexer)
 *  -  void      pMySQLLexer->MAX_USER_CONNECTIONS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MAXVALUE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MD5(pMySQLLexer)
 *  -  void      pMySQLLexer->MEDIUM_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MEDIUMBLOB(pMySQLLexer)
 *  -  void      pMySQLLexer->MEDIUMINT(pMySQLLexer)
 *  -  void      pMySQLLexer->MEDIUMTEXT(pMySQLLexer)
 *  -  void      pMySQLLexer->MEMORY_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MERGE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MICROSECOND(pMySQLLexer)
 *  -  void      pMySQLLexer->MID(pMySQLLexer)
 *  -  void      pMySQLLexer->MIGRATE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MIN_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MIN_ROWS(pMySQLLexer)
 *  -  void      pMySQLLexer->MINUTE(pMySQLLexer)
 *  -  void      pMySQLLexer->MINUTE_MICROSECOND(pMySQLLexer)
 *  -  void      pMySQLLexer->MINUTE_SECOND(pMySQLLexer)
 *  -  void      pMySQLLexer->MOD(pMySQLLexer)
 *  -  void      pMySQLLexer->MODE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MODIFIES_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MODIFY_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->MONTH(pMySQLLexer)
 *  -  void      pMySQLLexer->MONTHNAME(pMySQLLexer)
 *  -  void      pMySQLLexer->MULTILINESTRING(pMySQLLexer)
 *  -  void      pMySQLLexer->MULTIPOINT(pMySQLLexer)
 *  -  void      pMySQLLexer->MULTIPOLYGON(pMySQLLexer)
 *  -  void      pMySQLLexer->MUTEX_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->NAME_CONST(pMySQLLexer)
 *  -  void      pMySQLLexer->NAME_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->NAMES_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->NATIONAL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->NATURAL(pMySQLLexer)
 *  -  void      pMySQLLexer->NCHAR_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->NEW_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->NEXT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->NO_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->NO_WAIT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->NO_WRITE_TO_BINLOG(pMySQLLexer)
 *  -  void      pMySQLLexer->NODEGROUP_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->NONE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->NOT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->NOW(pMySQLLexer)
 *  -  void      pMySQLLexer->NULL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->NUMERIC_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->NVARCHAR_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->OCT(pMySQLLexer)
 *  -  void      pMySQLLexer->OFFSET_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->OJ_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->OLD_PASSWORD(pMySQLLexer)
 *  -  void      pMySQLLexer->ON(pMySQLLexer)
 *  -  void      pMySQLLexer->ONE_SHOT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ONE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->OPEN_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->OPTIMIZE(pMySQLLexer)
 *  -  void      pMySQLLexer->OPTION(pMySQLLexer)
 *  -  void      pMySQLLexer->OPTIONALLY(pMySQLLexer)
 *  -  void      pMySQLLexer->OPTIONS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ORD(pMySQLLexer)
 *  -  void      pMySQLLexer->ORDER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->OUT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->OUTER(pMySQLLexer)
 *  -  void      pMySQLLexer->OUTFILE(pMySQLLexer)
 *  -  void      pMySQLLexer->OWNER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->PACK_KEYS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->PAGE_CHECKSUM_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->PAGE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->PARSER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->PARTIAL(pMySQLLexer)
 *  -  void      pMySQLLexer->PARTITION_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->PARTITIONING_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->PARTITIONS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->PASSWORD(pMySQLLexer)
 *  -  void      pMySQLLexer->PERIOD_ADD(pMySQLLexer)
 *  -  void      pMySQLLexer->PERIOD_DIFF(pMySQLLexer)
 *  -  void      pMySQLLexer->PHASE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->PI(pMySQLLexer)
 *  -  void      pMySQLLexer->PLUGIN_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->PLUGINS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->POINT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->POLYGON(pMySQLLexer)
 *  -  void      pMySQLLexer->PORT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->POW(pMySQLLexer)
 *  -  void      pMySQLLexer->POWER(pMySQLLexer)
 *  -  void      pMySQLLexer->PRECISION(pMySQLLexer)
 *  -  void      pMySQLLexer->PREPARE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->PRESERVE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->PREV_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->PRIMARY_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->PRIVILEGES(pMySQLLexer)
 *  -  void      pMySQLLexer->PROCEDURE(pMySQLLexer)
 *  -  void      pMySQLLexer->PROCESS(pMySQLLexer)
 *  -  void      pMySQLLexer->PROCESSLIST_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->PROFILE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->PROFILES_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->PURGE(pMySQLLexer)
 *  -  void      pMySQLLexer->QUARTER(pMySQLLexer)
 *  -  void      pMySQLLexer->QUERY_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->QUICK(pMySQLLexer)
 *  -  void      pMySQLLexer->QUOTE(pMySQLLexer)
 *  -  void      pMySQLLexer->RADIANS(pMySQLLexer)
 *  -  void      pMySQLLexer->RAND(pMySQLLexer)
 *  -  void      pMySQLLexer->RANGE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->READ_ONLY_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->READ_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->READ_WRITE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->READS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->REAL(pMySQLLexer)
 *  -  void      pMySQLLexer->REBUILD_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->RECOVER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->REDO_BUFFER_SIZE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->REDOFILE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->REDUNDANT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->REFERENCES(pMySQLLexer)
 *  -  void      pMySQLLexer->REGEXP(pMySQLLexer)
 *  -  void      pMySQLLexer->RELAY_LOG_FILE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->RELAY_LOG_POS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->RELEASE_LOCK(pMySQLLexer)
 *  -  void      pMySQLLexer->RELEASE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->RELOAD(pMySQLLexer)
 *  -  void      pMySQLLexer->REMOVE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->RENAME(pMySQLLexer)
 *  -  void      pMySQLLexer->REORGANIZE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->REPAIR(pMySQLLexer)
 *  -  void      pMySQLLexer->REPEAT(pMySQLLexer)
 *  -  void      pMySQLLexer->REPEATABLE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->REPLACE(pMySQLLexer)
 *  -  void      pMySQLLexer->REPLICATION(pMySQLLexer)
 *  -  void      pMySQLLexer->REQUIRE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->RESET_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->RESOURCES(pMySQLLexer)
 *  -  void      pMySQLLexer->RESTORE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->RESTRICT(pMySQLLexer)
 *  -  void      pMySQLLexer->RESUME_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->RETURN_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->RETURNS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->REVERSE(pMySQLLexer)
 *  -  void      pMySQLLexer->REVOKE(pMySQLLexer)
 *  -  void      pMySQLLexer->RIGHT(pMySQLLexer)
 *  -  void      pMySQLLexer->ROLLBACK(pMySQLLexer)
 *  -  void      pMySQLLexer->ROLLUP_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ROUND(pMySQLLexer)
 *  -  void      pMySQLLexer->ROUTINE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ROW_FORMAT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ROW_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ROWS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->RPAD(pMySQLLexer)
 *  -  void      pMySQLLexer->RTREE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->RTRIM(pMySQLLexer)
 *  -  void      pMySQLLexer->SAVEPOINT(pMySQLLexer)
 *  -  void      pMySQLLexer->SCHEDULE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SCHEMA(pMySQLLexer)
 *  -  void      pMySQLLexer->SEC_TO_TIME(pMySQLLexer)
 *  -  void      pMySQLLexer->SECOND(pMySQLLexer)
 *  -  void      pMySQLLexer->SECOND_MICROSECOND(pMySQLLexer)
 *  -  void      pMySQLLexer->SECURITY_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SELECT(pMySQLLexer)
 *  -  void      pMySQLLexer->SENSITIVE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SEPARATOR_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SERIAL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SERIALIZABLE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SERVER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SESSION_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SESSION_USER(pMySQLLexer)
 *  -  void      pMySQLLexer->SET_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SHARED_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SHARE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SHOW(pMySQLLexer)
 *  -  void      pMySQLLexer->SHUTDOWN(pMySQLLexer)
 *  -  void      pMySQLLexer->SIGN(pMySQLLexer)
 *  -  void      pMySQLLexer->SIGNED_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SIMPLE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SIN(pMySQLLexer)
 *  -  void      pMySQLLexer->SJIS(pMySQLLexer)
 *  -  void      pMySQLLexer->SLAVE(pMySQLLexer)
 *  -  void      pMySQLLexer->SLEEP(pMySQLLexer)
 *  -  void      pMySQLLexer->SMALLINT(pMySQLLexer)
 *  -  void      pMySQLLexer->SNAPSHOT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SOCKET_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SONAME_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SOUNDEX(pMySQLLexer)
 *  -  void      pMySQLLexer->SOUNDS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SOURCE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SPACE(pMySQLLexer)
 *  -  void      pMySQLLexer->SPATIAL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SPECIFIC_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SQL_BIG_RESULT(pMySQLLexer)
 *  -  void      pMySQLLexer->SQL_BUFFER_RESULT(pMySQLLexer)
 *  -  void      pMySQLLexer->SQL_CACHE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SQL_CALC_FOUND_ROWS(pMySQLLexer)
 *  -  void      pMySQLLexer->SQL_NO_CACHE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SQL_SMALL_RESULT(pMySQLLexer)
 *  -  void      pMySQLLexer->SQL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SQL_THREAD(pMySQLLexer)
 *  -  void      pMySQLLexer->SQLEXCEPTION_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SQLSTATE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SQLWARNING_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SQRT(pMySQLLexer)
 *  -  void      pMySQLLexer->SSL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->START_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->STARTING(pMySQLLexer)
 *  -  void      pMySQLLexer->STATS_AUTO_RECALC(pMySQLLexer)
 *  -  void      pMySQLLexer->STATS_PERSISTENT(pMySQLLexer)
 *  -  void      pMySQLLexer->STARTS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->STATUS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->STD(pMySQLLexer)
 *  -  void      pMySQLLexer->STDDEV(pMySQLLexer)
 *  -  void      pMySQLLexer->STDDEV_POP(pMySQLLexer)
 *  -  void      pMySQLLexer->STDDEV_SAMP(pMySQLLexer)
 *  -  void      pMySQLLexer->STOP_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->STORAGE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->STR_TO_DATE(pMySQLLexer)
 *  -  void      pMySQLLexer->STRAIGHT_JOIN(pMySQLLexer)
 *  -  void      pMySQLLexer->STRCMP(pMySQLLexer)
 *  -  void      pMySQLLexer->STRING_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SUBJECT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SUBPARTITION_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SUBPARTITIONS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SUBSTRING(pMySQLLexer)
 *  -  void      pMySQLLexer->SUBSTRING_INDEX(pMySQLLexer)
 *  -  void      pMySQLLexer->SUBTIME(pMySQLLexer)
 *  -  void      pMySQLLexer->SUM(pMySQLLexer)
 *  -  void      pMySQLLexer->SUPER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SUSPEND_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SWAPS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SWE7(pMySQLLexer)
 *  -  void      pMySQLLexer->SWITCHES_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->SYSDATE(pMySQLLexer)
 *  -  void      pMySQLLexer->SYSTEM_USER(pMySQLLexer)
 *  -  void      pMySQLLexer->TABLE(pMySQLLexer)
 *  -  void      pMySQLLexer->TABLE_CHECKSUM_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->TABLES(pMySQLLexer)
 *  -  void      pMySQLLexer->TABLESPACE(pMySQLLexer)
 *  -  void      pMySQLLexer->TAN(pMySQLLexer)
 *  -  void      pMySQLLexer->TEMPORARY(pMySQLLexer)
 *  -  void      pMySQLLexer->TEMPTABLE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->TERMINATED(pMySQLLexer)
 *  -  void      pMySQLLexer->TEXT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->THAN_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->THEN_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->TIME_FORMAT(pMySQLLexer)
 *  -  void      pMySQLLexer->TIME_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->TIME_TO_SEC(pMySQLLexer)
 *  -  void      pMySQLLexer->TIMEDIFF(pMySQLLexer)
 *  -  void      pMySQLLexer->TIMESTAMP(pMySQLLexer)
 *  -  void      pMySQLLexer->TIMESTAMPADD(pMySQLLexer)
 *  -  void      pMySQLLexer->TIMESTAMPDIFF(pMySQLLexer)
 *  -  void      pMySQLLexer->TINYBLOB(pMySQLLexer)
 *  -  void      pMySQLLexer->TINYINT(pMySQLLexer)
 *  -  void      pMySQLLexer->TINYTEXT(pMySQLLexer)
 *  -  void      pMySQLLexer->TIS620(pMySQLLexer)
 *  -  void      pMySQLLexer->TO_BASE64(pMySQLLexer)
 *  -  void      pMySQLLexer->TO_DAYS(pMySQLLexer)
 *  -  void      pMySQLLexer->TO_SECONDS(pMySQLLexer)
 *  -  void      pMySQLLexer->TO_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->TRAILING(pMySQLLexer)
 *  -  void      pMySQLLexer->TRANSACTION(pMySQLLexer)
 *  -  void      pMySQLLexer->TRANSACTIONAL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->TRIGGER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->TRIGGERS_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->TRIM(pMySQLLexer)
 *  -  void      pMySQLLexer->TRUE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->TRUNCATE(pMySQLLexer)
 *  -  void      pMySQLLexer->TYPE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->TYPES_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->UCS2(pMySQLLexer)
 *  -  void      pMySQLLexer->UJIS(pMySQLLexer)
 *  -  void      pMySQLLexer->UNCOMMITTED_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->UNCOMPRESS(pMySQLLexer)
 *  -  void      pMySQLLexer->UNCOMPRESSED_LENGTH(pMySQLLexer)
 *  -  void      pMySQLLexer->UNDEFINED_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->UNDO_BUFFER_SIZE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->UNDO_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->UNDOFILE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->UNHEX(pMySQLLexer)
 *  -  void      pMySQLLexer->UNICODE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->UNINSTALL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->UNION_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->UNIQUE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->UNIX_TIMESTAMP(pMySQLLexer)
 *  -  void      pMySQLLexer->UNKNOWN_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->UNLOCK_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->UNSIGNED_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->UNTIL_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->UPDATE(pMySQLLexer)
 *  -  void      pMySQLLexer->UPGRADE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->UPPER(pMySQLLexer)
 *  -  void      pMySQLLexer->USAGE(pMySQLLexer)
 *  -  void      pMySQLLexer->USE_FRM(pMySQLLexer)
 *  -  void      pMySQLLexer->USE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->USER(pMySQLLexer)
 *  -  void      pMySQLLexer->USING_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->UTC_DATE(pMySQLLexer)
 *  -  void      pMySQLLexer->UTC_TIME(pMySQLLexer)
 *  -  void      pMySQLLexer->UTC_TIMESTAMP(pMySQLLexer)
 *  -  void      pMySQLLexer->UTF16LE(pMySQLLexer)
 *  -  void      pMySQLLexer->UTF16(pMySQLLexer)
 *  -  void      pMySQLLexer->UTF32(pMySQLLexer)
 *  -  void      pMySQLLexer->UTF8(pMySQLLexer)
 *  -  void      pMySQLLexer->UUID(pMySQLLexer)
 *  -  void      pMySQLLexer->VALUE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->VALUES(pMySQLLexer)
 *  -  void      pMySQLLexer->VAR_POP(pMySQLLexer)
 *  -  void      pMySQLLexer->VAR_SAMP(pMySQLLexer)
 *  -  void      pMySQLLexer->VARBINARY(pMySQLLexer)
 *  -  void      pMySQLLexer->VARCHAR(pMySQLLexer)
 *  -  void      pMySQLLexer->VARIABLES(pMySQLLexer)
 *  -  void      pMySQLLexer->VARIANCE(pMySQLLexer)
 *  -  void      pMySQLLexer->VARYING(pMySQLLexer)
 *  -  void      pMySQLLexer->VERSION_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->VIEW_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->WAIT_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->WARNINGS(pMySQLLexer)
 *  -  void      pMySQLLexer->WEEK(pMySQLLexer)
 *  -  void      pMySQLLexer->WEEKDAY(pMySQLLexer)
 *  -  void      pMySQLLexer->WEEKOFYEAR(pMySQLLexer)
 *  -  void      pMySQLLexer->WEIGHT_STRING(pMySQLLexer)
 *  -  void      pMySQLLexer->WHEN_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->WHERE(pMySQLLexer)
 *  -  void      pMySQLLexer->WHILE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->WITH(pMySQLLexer)
 *  -  void      pMySQLLexer->WORK_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->WRAPPER_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->WRITE_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->X509_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->XA_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->XML_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->XOR(pMySQLLexer)
 *  -  void      pMySQLLexer->YEAR(pMySQLLexer)
 *  -  void      pMySQLLexer->YEAR_MONTH(pMySQLLexer)
 *  -  void      pMySQLLexer->YEARWEEK(pMySQLLexer)
 *  -  void      pMySQLLexer->ZEROFILL(pMySQLLexer)
 *  -  void      pMySQLLexer->DIVIDE(pMySQLLexer)
 *  -  void      pMySQLLexer->MOD_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->OR_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->AND_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->ARROW(pMySQLLexer)
 *  -  void      pMySQLLexer->EQ_SYM(pMySQLLexer)
 *  -  void      pMySQLLexer->NOT_EQ(pMySQLLexer)
 *  -  void      pMySQLLexer->LET(pMySQLLexer)
 *  -  void      pMySQLLexer->GET(pMySQLLexer)
 *  -  void      pMySQLLexer->SET_VAR(pMySQLLexer)
 *  -  void      pMySQLLexer->SHIFT_LEFT(pMySQLLexer)
 *  -  void      pMySQLLexer->SHIFT_RIGHT(pMySQLLexer)
 *  -  void      pMySQLLexer->ALL_FIELDS(pMySQLLexer)
 *  -  void      pMySQLLexer->SEMI(pMySQLLexer)
 *  -  void      pMySQLLexer->COLON(pMySQLLexer)
 *  -  void      pMySQLLexer->DOT(pMySQLLexer)
 *  -  void      pMySQLLexer->COMMA(pMySQLLexer)
 *  -  void      pMySQLLexer->ASTERISK(pMySQLLexer)
 *  -  void      pMySQLLexer->RPAREN(pMySQLLexer)
 *  -  void      pMySQLLexer->LPAREN(pMySQLLexer)
 *  -  void      pMySQLLexer->RBRACK(pMySQLLexer)
 *  -  void      pMySQLLexer->LBRACK(pMySQLLexer)
 *  -  void      pMySQLLexer->PLUS(pMySQLLexer)
 *  -  void      pMySQLLexer->MINUS(pMySQLLexer)
 *  -  void      pMySQLLexer->NEGATION(pMySQLLexer)
 *  -  void      pMySQLLexer->VERTBAR(pMySQLLexer)
 *  -  void      pMySQLLexer->BITAND(pMySQLLexer)
 *  -  void      pMySQLLexer->POWER_OP(pMySQLLexer)
 *  -  void      pMySQLLexer->GTH(pMySQLLexer)
 *  -  void      pMySQLLexer->LTH(pMySQLLexer)
 *  -  void      pMySQLLexer->INTEGER_NUM(pMySQLLexer)
 *  -  void      pMySQLLexer->HEX_DIGIT_FRAGMENT(pMySQLLexer)
 *  -  void      pMySQLLexer->HEX_DIGIT(pMySQLLexer)
 *  -  void      pMySQLLexer->BIT_NUM(pMySQLLexer)
 *  -  void      pMySQLLexer->REAL_NUMBER(pMySQLLexer)
 *  -  void      pMySQLLexer->TEXT_STRING(pMySQLLexer)
 *  -  void      pMySQLLexer->ID(pMySQLLexer)
 *  -  void      pMySQLLexer->USER_VAR(pMySQLLexer)
 *  -  void      pMySQLLexer->USER_VAR_SUBFIX1(pMySQLLexer)
 *  -  void      pMySQLLexer->USER_VAR_SUBFIX2(pMySQLLexer)
 *  -  void      pMySQLLexer->USER_VAR_SUBFIX3(pMySQLLexer)
 *  -  void      pMySQLLexer->USER_VAR_SUBFIX4(pMySQLLexer)
 *  -  void      pMySQLLexer->WHITE_SPACE(pMySQLLexer)
 *  -  void      pMySQLLexer->SL_COMMENT(pMySQLLexer)
 *  -  void      pMySQLLexer->ML_COMMENT(pMySQLLexer)
 *  -  void      pMySQLLexer->Tokens(pMySQLLexer)
 *
 * The return type for any particular rule is of course determined by the source
 * grammar file.
 */
// [The "BSD licence"]
// Copyright (c) 2005-2009 Jim Idle, Temporal Wave LLC
// http://www.temporal-wave.com
// http://www.linkedin.com/in/jimidle
//
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#ifndef	_MySQLLexer_H
#define _MySQLLexer_H
/* =============================================================================
 * Standard antlr3 C runtime definitions
 */
#include    <antlr3.h>

/* End of standard antlr 3 runtime definitions
 * =============================================================================
 */
 
#ifdef __cplusplus
extern "C" {
#endif

// Forward declare the context typedef so that we can use it before it is
// properly defined. Delegators and delegates (from import statements) are
// interdependent and their context structures contain pointers to each other
// C only allows such things to be declared if you pre-declare the typedef.
//
typedef struct MySQLLexer_Ctx_struct MySQLLexer, * pMySQLLexer;





#ifdef	ANTLR3_WINDOWS
// Disable: Unreferenced parameter,							- Rules with parameters that are not used
//          constant conditional,							- ANTLR realizes that a prediction is always true (synpred usually)
//          initialized but unused variable					- tree rewrite variables declared but not needed
//          Unreferenced local variable						- lexer rule declares but does not always use _type
//          potentially unitialized variable used			- retval always returned from a rule 
//			unreferenced local function has been removed	- susually getTokenNames or freeScope, they can go without warnigns
//
// These are only really displayed at warning level /W4 but that is the code ideal I am aiming at
// and the codegen must generate some of these warnings by necessity, apart from 4100, which is
// usually generated when a parser rule is given a parameter that it does not use. Mostly though
// this is a matter of orthogonality hence I disable that one.
//
#pragma warning( disable : 4100 )
#pragma warning( disable : 4101 )
#pragma warning( disable : 4127 )
#pragma warning( disable : 4189 )
#pragma warning( disable : 4505 )
#pragma warning( disable : 4701 )
#endif

/** Context tracking structure for MySQLLexer
 */
struct MySQLLexer_Ctx_struct
{
    /** Built in ANTLR3 context tracker contains all the generic elements
     *  required for context tracking.
     */
    pANTLR3_LEXER    pLexer;


     void (*mA_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mB_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mC_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mD_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mE_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mF_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mG_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mH_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mI_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mJ_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mK_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mL_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mM_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mN_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mO_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mP_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mQ_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mR_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mS_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mT_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mU_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mV_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mW_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mX_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mY_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mZ_)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mABS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mACCESSIBLE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mACOS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mACTION)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mADD_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mADDDATE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mADDTIME)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mAES_DECRYPT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mAES_ENCRYPT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mAFTER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mAGAINST)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mAGGREGATE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mALGORITHM_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mALL)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mALTER)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mANALYZE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mANY)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mARMSCII8)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mAS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mASC)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mASCII_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mASENSITIVE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mASIN)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mAT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mATAN)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mATAN2)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mAUTHORS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mAUTO_INCREMENT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mAUTOEXTEND_SIZE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mAVG)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mAVG_ROW_LENGTH)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBACKUP_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBEFORE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBEGIN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBENCHMARK)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBETWEEN)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBIG5)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBIGINT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBIN)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBINARY)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBINLOG_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBIT_AND)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBIT_LENGTH)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBIT_OR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBIT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBIT_XOR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBLOB_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBLOCK_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBOOL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBOOLEAN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBOTH)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBTREE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBYTE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCACHE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCALL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCASCADE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCASCADED)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCASE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCAST_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCEIL)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCEILING)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCHAIN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCHANGE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCHANGED)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCHAR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCHAR_LENGTH)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCHARACTER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCHARSET)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCHECK_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCHECKSUM_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCIPHER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCLIENT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCLOSE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOALESCE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCODE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOERCIBILITY)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOLLATE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOLLATION)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOLUMN_FORMAT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOLUMN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOLUMNS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOMMENT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOMMIT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOMMITTED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOMPACT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOMPLETION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOMPRESS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOMPRESSED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCONCAT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCONCAT_WS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCONCURRENT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCONDITION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCONNECTION_ID)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCONNECTION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCONSISTENT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCONSTRAINT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCONTAINS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCONTEXT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCONTINUE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCONTRIBUTORS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCONV)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCONVERT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCONVERT_TZ)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOPY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOUNT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCP1250)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCP1251)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCP1256)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCP1257)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCP850)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCP852)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCP866)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCP932)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCPU_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCRC32)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCREATE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCROSECOND)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCROSS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCUBE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCURDATE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCURRENT_TIMESTAMP)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCURRENT_USER)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCURSOR_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCURTIME)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDATABASE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDATAFILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDATA_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDATE_ADD)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDATE_FORMAT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDATE_SUB)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDATE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDATEDIFF)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDATETIME)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDAY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDAY_HOUR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDAY_MICROSECOND)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDAY_MINUTE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDAY_SECOND)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDAYNAME)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDAYOFMONTH)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDAYOFWEEK)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDAYOFYEAR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDEALLOCATE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDEC8)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDECIMAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDECLARE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDECODE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDEFAULT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDEFINER)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDEGREES)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDELAY_KEY_WRITE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDELAYED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDELETE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDES_DECRYPT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDES_ENCRYPT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDES_KEY_FILE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDESC)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDETERMINISTIC_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDIRECTORY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDISABLE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDISCARD)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDISK_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDISTINCT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDISTINCTROW)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDO_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDOUBLE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDROP)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDUAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDUMPFILE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDUPLICATE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDYNAMIC_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEACH_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mELSE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mELSIF_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mELT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mENABLE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mENCLOSED)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mENCODE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mENCRYPT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEND_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mENDS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mENGINE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mENGINES_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mENUM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mERRORS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mESCAPE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mESCAPED)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEUCJPMS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEUCKR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEVENT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEVENTS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEVERY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEXCHANGE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEXECUTE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEXCLUSIVE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEXISTS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEXIT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEXP)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEXPANSION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEXPORT_SET)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEXTENDED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEXTENT_SIZE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEXTRACT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFALSE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFAST_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFAULTS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFIELDS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFETCH_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFIELD)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFIND_IN_SET)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFIRST_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFIXED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFLOAT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFLOOR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFLUSH_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFOR_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFORCE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFOREIGN)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFORMAT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFOUND_ROWS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFOUND_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFROM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFROM_BASE64)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFROM_DAYS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFROM_UNIXTIME)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFULL)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFULLTEXT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mFUNCTION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mGB2312)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mGBK)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mGEOMETRY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mGEOMETRYCOLLECTION)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mGEOSTD8)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mGET_FORMAT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mGET_LOCK)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mGLOBAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mGRANT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mGRANTS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mGREEK)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mGROUP_CONCAT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mGROUP_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mHANDLER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mHASH_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mHAVING)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mHEBREW)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mHELP_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mHEX)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mHIGH_PRIORITY)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mHOST_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mHOSTS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mHOUR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mHOUR_MICROSECOND)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mHOUR_MINUTE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mHOUR_SECOND)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mHP8)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mIDENTIFIED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mIF)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mIFNULL)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mIGNORE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mIMPORT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mIN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINDEX_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINDEXES)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINET_ATON)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINET_NTOA)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINFILE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINITIAL_SIZE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINNER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINOUT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINPLACE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINSENSITIVE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINSERT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINSERT_METHOD)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINSTALL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINSTR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINTEGER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINTERVAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINTO)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINVOKER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mIO_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mIPC_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mIS_FREE_LOCK)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mIS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mIS_USED_LOCK)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mISOLATION)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mISSUER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mITERATE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mJOIN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mKEY_BLOCK_SIZE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mKEY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mKEYBCS2)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mKEYS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mKILL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mKOI8R)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mKOI8U)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLANGUAGE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLAST_DAY)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLAST_INSERT_ID)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLAST_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLATIN1_BIN)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLATIN1_GENERAL_CS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLATIN1)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLATIN2)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLATIN5)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLATIN7)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLEADING)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLEAVE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLEAVES)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLEFT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLENGTH)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLESS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLEVEL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLIKE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLIMIT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLINEAR_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLINES)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLINESTRING)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLIST_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLN)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLOAD)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLOAD_FILE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLOCAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLOCATE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLOCK)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLOCKS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLOG)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLOG10)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLOG2)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLOGFILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLOGS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLONG_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLONGBLOB)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLONGTEXT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLOOP_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLOW_PRIORITY)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLOWER)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLPAD)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLTRIM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMACCE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMACROMAN)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMAKE_SET)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMAKEDATE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMAKETIME)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMASTER_CONNECT_RETRY)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMASTER_HOST_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMASTER_LOG_FILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMASTER_LOG_POS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMASTER_PASSWORD_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMASTER_PORT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMASTER_POS_WAIT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMASTER_SERVER_ID_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMASTER_SSL_CA_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMASTER_SSL_CAPATH_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMASTER_SSL_CERT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMASTER_SSL_CIPHER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMASTER_SSL_KEY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMASTER_SSL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMASTER_SSL_VERIFY_SERVER_CERT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMASTER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMASTER_USER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMATCH)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMAX_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMAX_CONNECTIONS_PER_HOUR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMAX_QUERIES_PER_HOUR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMAX_ROWS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMAX_SIZE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMAX_UPDATES_PER_HOUR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMAX_USER_CONNECTIONS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMAXVALUE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMD5)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMEDIUM_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMEDIUMBLOB)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMEDIUMINT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMEDIUMTEXT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMEMORY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMERGE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMICROSECOND)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMID)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMIGRATE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMIN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMIN_ROWS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMINUTE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMINUTE_MICROSECOND)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMINUTE_SECOND)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMOD)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMODE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMODIFIES_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMODIFY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMONTH)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMONTHNAME)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMULTILINESTRING)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMULTIPOINT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMULTIPOLYGON)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMUTEX_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNAME_CONST)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNAME_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNAMES_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNATIONAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNATURAL)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNCHAR_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNEW_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNEXT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNO_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNO_WAIT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNO_WRITE_TO_BINLOG)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNODEGROUP_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNONE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNOT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNOW)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNULL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNUMERIC_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNVARCHAR_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mOCT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mOFFSET_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mOJ_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mOLD_PASSWORD)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mON)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mONE_SHOT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mONE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mOPEN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mOPTIMIZE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mOPTION)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mOPTIONALLY)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mOPTIONS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mORD)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mORDER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mOUT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mOUTER)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mOUTFILE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mOWNER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPACK_KEYS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPAGE_CHECKSUM_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPAGE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPARSER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPARTIAL)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPARTITION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPARTITIONING_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPARTITIONS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPASSWORD)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPERIOD_ADD)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPERIOD_DIFF)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPHASE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPI)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPLUGIN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPLUGINS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPOINT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPOLYGON)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPORT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPOW)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPOWER)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPRECISION)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPREPARE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPRESERVE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPREV_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPRIMARY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPRIVILEGES)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPROCEDURE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPROCESS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPROCESSLIST_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPROFILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPROFILES_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPURGE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mQUARTER)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mQUERY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mQUICK)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mQUOTE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRADIANS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRAND)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRANGE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREAD_ONLY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREAD_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREAD_WRITE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREADS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREAL)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREBUILD_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRECOVER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREDO_BUFFER_SIZE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREDOFILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREDUNDANT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREFERENCES)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREGEXP)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRELAY_LOG_FILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRELAY_LOG_POS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRELEASE_LOCK)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRELEASE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRELOAD)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREMOVE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRENAME)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREORGANIZE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREPAIR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREPEAT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREPEATABLE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREPLACE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREPLICATION)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREQUIRE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRESET_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRESOURCES)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRESTORE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRESTRICT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRESUME_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRETURN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRETURNS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREVERSE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREVOKE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRIGHT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mROLLBACK)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mROLLUP_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mROUND)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mROUTINE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mROW_FORMAT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mROW_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mROWS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRPAD)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRTREE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRTRIM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSAVEPOINT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSCHEDULE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSCHEMA)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSEC_TO_TIME)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSECOND)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSECOND_MICROSECOND)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSECURITY_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSELECT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSENSITIVE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSEPARATOR_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSERIAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSERIALIZABLE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSERVER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSESSION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSESSION_USER)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSET_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSHARED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSHARE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSHOW)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSHUTDOWN)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSIGN)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSIGNED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSIMPLE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSIN)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSJIS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSLAVE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSLEEP)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSMALLINT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSNAPSHOT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSOCKET_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSONAME_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSOUNDEX)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSOUNDS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSOURCE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSPACE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSPATIAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSPECIFIC_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSQL_BIG_RESULT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSQL_BUFFER_RESULT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSQL_CACHE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSQL_CALC_FOUND_ROWS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSQL_NO_CACHE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSQL_SMALL_RESULT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSQL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSQL_THREAD)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSQLEXCEPTION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSQLSTATE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSQLWARNING_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSQRT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSSL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSTART_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSTARTING)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSTATS_AUTO_RECALC)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSTATS_PERSISTENT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSTARTS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSTATUS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSTD)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSTDDEV)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSTDDEV_POP)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSTDDEV_SAMP)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSTOP_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSTORAGE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSTR_TO_DATE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSTRAIGHT_JOIN)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSTRCMP)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSTRING_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSUBJECT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSUBPARTITION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSUBPARTITIONS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSUBSTRING)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSUBSTRING_INDEX)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSUBTIME)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSUM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSUPER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSUSPEND_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSWAPS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSWE7)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSWITCHES_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSYSDATE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSYSTEM_USER)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTABLE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTABLE_CHECKSUM_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTABLES)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTABLESPACE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTAN)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTEMPORARY)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTEMPTABLE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTERMINATED)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTEXT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTHAN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTHEN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTIME_FORMAT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTIME_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTIME_TO_SEC)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTIMEDIFF)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTIMESTAMP)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTIMESTAMPADD)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTIMESTAMPDIFF)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTINYBLOB)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTINYINT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTINYTEXT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTIS620)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTO_BASE64)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTO_DAYS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTO_SECONDS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTO_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTRAILING)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTRANSACTION)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTRANSACTIONAL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTRIGGER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTRIGGERS_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTRIM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTRUE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTRUNCATE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTYPE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTYPES_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUCS2)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUJIS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUNCOMMITTED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUNCOMPRESS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUNCOMPRESSED_LENGTH)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUNDEFINED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUNDO_BUFFER_SIZE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUNDO_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUNDOFILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUNHEX)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUNICODE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUNINSTALL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUNION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUNIQUE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUNIX_TIMESTAMP)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUNKNOWN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUNLOCK_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUNSIGNED_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUNTIL_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUPDATE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUPGRADE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUPPER)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUSAGE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUSE_FRM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUSE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUSER)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUSING_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUTC_DATE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUTC_TIME)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUTC_TIMESTAMP)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUTF16LE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUTF16)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUTF32)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUTF8)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUUID)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mVALUE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mVALUES)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mVAR_POP)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mVAR_SAMP)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mVARBINARY)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mVARCHAR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mVARIABLES)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mVARIANCE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mVARYING)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mVERSION_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mVIEW_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mWAIT_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mWARNINGS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mWEEK)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mWEEKDAY)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mWEEKOFYEAR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mWEIGHT_STRING)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mWHEN_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mWHERE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mWHILE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mWITH)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mWORK_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mWRAPPER_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mWRITE_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mX509_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mXA_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mXML_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mXOR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mYEAR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mYEAR_MONTH)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mYEARWEEK)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mZEROFILL)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDIVIDE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMOD_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mOR_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mAND_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mARROW)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mEQ_SYM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNOT_EQ)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLET)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mGET)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSET_VAR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSHIFT_LEFT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSHIFT_RIGHT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mALL_FIELDS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSEMI)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOLON)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mDOT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mCOMMA)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mASTERISK)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRPAREN)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLPAREN)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mRBRACK)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLBRACK)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPLUS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mMINUS)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mNEGATION)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mVERTBAR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBITAND)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mPOWER_OP)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mGTH)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mLTH)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mINTEGER_NUM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mHEX_DIGIT_FRAGMENT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mHEX_DIGIT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mBIT_NUM)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mREAL_NUMBER)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTEXT_STRING)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mID)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUSER_VAR)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUSER_VAR_SUBFIX1)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUSER_VAR_SUBFIX2)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUSER_VAR_SUBFIX3)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mUSER_VAR_SUBFIX4)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mWHITE_SPACE)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mSL_COMMENT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mML_COMMENT)	(struct MySQLLexer_Ctx_struct * ctx);
     void (*mTokens)	(struct MySQLLexer_Ctx_struct * ctx);    const char * (*getGrammarFileName)();
    void	    (*free)   (struct MySQLLexer_Ctx_struct * ctx);
        
};

// Function protoypes for the constructor functions that external translation units
// such as delegators and delegates may wish to call.
//
ANTLR3_API pMySQLLexer MySQLLexerNew         (pANTLR3_INPUT_STREAM instream);
ANTLR3_API pMySQLLexer MySQLLexerNewSSD      (pANTLR3_INPUT_STREAM instream, pANTLR3_RECOGNIZER_SHARED_STATE state);

/** Symbolic definitions of all the tokens that the lexer will work with.
 * \{
 *
 * Antlr will define EOF, but we can't use that as it it is too common in
 * in C header files and that would be confusing. There is no way to filter this out at the moment
 * so we just undef it here for now. That isn't the value we get back from C recognizers
 * anyway. We are looking for ANTLR3_TOKEN_EOF.
 */
#ifdef	EOF
#undef	EOF
#endif
#ifdef	Tokens
#undef	Tokens
#endif 
#define MASTER_LOG_FILE_SYM      380
#define GEOMETRYCOLLECTION      265
#define D_      7
#define NAME_CONST      429
#define DEGREES      182
#define CASCADED      87
#define PRECISION      485
#define KOI8U      329
#define BACKUP_SYM      61
#define MASTER_SYM      393
#define CONCAT_WS      120
#define REORGANIZE_SYM      523
#define E_      8
#define FETCH_SYM      240
#define RPAREN      751
#define AGGREGATE_SYM      41
#define SQLSTATE_SYM      596
#define REGEXP      515
#define MEDIUMINT      407
#define GET      741
#define MASTER_PASSWORD_SYM      382
#define SHOW      568
#define DIVIDE      733
#define RBRACK      753
#define F_      9
#define ASC      49
#define NEW_SYM      435
#define TRANSACTION      657
#define DAY_MINUTE      169
#define CURDATE      152
#define LEADING      340
#define OCT      447
#define G_      10
#define SL_COMMENT      776
#define PLUGIN_SYM      478
#define USER      691
#define INVOKER_SYM      313
#define SHUTDOWN      569
#define KOI8R      328
#define MAXVALUE_SYM      403
#define LOWER      370
#define GET_FORMAT      267
#define AVG_ROW_LENGTH      60
#define MAX_ROWS      399
#define CONSTRAINT      126
#define SQL_SMALL_RESULT      592
#define OPTIONS_SYM      458
#define TIME_SYM      642
#define LBRACK      754
#define INTERVAL_SYM      311
#define UUID      700
#define CURRENT_USER      154
#define BTREE_SYM      81
#define SLEEP      576
#define RANGE_SYM      503
#define GROUP_SYM      274
#define LINES      350
#define BIT_NUM      766
#define MULTIPOINT      426
#define SERIALIZABLE_SYM      561
#define SQLEXCEPTION_SYM      595
#define SECOND_MICROSECOND      555
#define ADDDATE      35
#define CONNECTION_ID      123
#define LEVEL_SYM      346
#define NULL_SYM      444
#define INTEGER_NUM      763
#define COMPRESS      117
#define FAST_SYM      237
#define AVG      59
#define TRUNCATE      663
#define A_      4
#define GROUP_CONCAT      273
#define MINUTE_SECOND      418
#define MASTER_SSL_CIPHER_SYM      389
#define LONGTEXT      367
#define B_      5
#define INSTR      308
#define HEX_DIGIT      765
#define RIGHT      539
#define ATAN2      55
#define GB2312      262
#define MINUS      756
#define SUSPEND_SYM      624
#define QUICK      499
#define SNAPSHOT_SYM      578
#define COLON      747
#define OPTIMIZE      455
#define COLUMN_SYM      110
#define MASTER_SSL_CA_SYM      386
#define DATABASE      157
#define ENCRYPT      211
#define C_      6
#define USE_SYM      690
#define VIEW_SYM      711
#define SQL_BIG_RESULT      587
#define TEXT_STRING      768
#define ARROW      737
#define NATURAL      433
#define DETERMINISTIC_SYM      190
#define FORCE_SYM      250
#define PARTITION_SYM      470
#define LESS_SYM      345
#define EXTENT_SIZE_SYM      234
#define RESET_SYM      530
#define LN      353
#define SQL_CALC_FOUND_ROWS      590
#define INT_SYM      309
#define CONVERT_SYM      132
#define FIND_IN_SET      243
#define BIT_LENGTH      72
#define COUNT      137
#define SUBSTRING_INDEX      620
#define L_      15
#define BENCHMARK      64
#define DATEDIFF      164
#define MASTER_HOST_SYM      379
#define MASTER_SERVER_ID_SYM      385
#define BIT_OR      73
#define XML_SYM      727
#define SWITCHES_SYM      627
#define MEDIUMBLOB      406
#define LATIN1_BIN      334
#define RTREE_SYM      548
#define LPAD      371
#define M_      16
#define MASTER_LOG_POS_SYM      381
#define READS_SYM      507
#define COALESCE      104
#define TINYTEXT      650
#define ON      451
#define SHARED_SYM      566
#define MATCH      395
#define STRAIGHT_JOIN      613
#define FLOOR      247
#define COLLATE_SYM      107
#define COMMITTED_SYM      114
#define NCHAR_SYM      434
#define AGAINST      40
#define ISSUER_SYM      320
#define N_      17
#define PAGE_SYM      467
#define FIELDS_SYM      239
#define SHIFT_RIGHT      744
#define DISCARD      193
#define TO_BASE64      652
#define DOUBLE_SYM      198
#define STDDEV      607
#define CONCURRENT      121
#define PI      477
#define THEN_SYM      640
#define O_      18
#define TIMESTAMP      645
#define UPPER      687
#define DIRECTORY_SYM      191
#define LOAD_FILE      355
#define BIT_AND      71
#define YEAR      729
#define ROW_FORMAT_SYM      544
#define LOOP_SYM      368
#define ADD_SYM      34
#define MOD_SYM      734
#define NAME_SYM      430
#define H_      11
#define UNDO_SYM      673
#define ID      769
#define CROSS      150
#define LENGTH      344
#define IF      290
#define QUERY_SYM      498
#define DEALLOCATE_SYM      175
#define MD5      404
#define EXPORT_SET      232
#define REFERENCES      514
#define OJ_SYM      449
#define COMMIT_SYM      113
#define ELSE_SYM      205
#define PARTITIONS_SYM      472
#define MASTER_SSL_VERIFY_SERVER_CERT      392
#define I_      12
#define SQL_THREAD      594
#define IO_SYM      314
#define WITH      721
#define STATUS_SYM      605
#define REDOFILE_SYM      512
#define IS_SYM      317
#define UTF32      698
#define GBK      263
#define UNHEX      675
#define BEGIN_SYM      63
#define DEFAULT      180
#define J_      13
#define PURGE      496
#define REDO_BUFFER_SIZE_SYM      511
#define DO_SYM      197
#define STRCMP      614
#define LAST_INSERT_ID      332
#define END_SYM      212
#define SUBPARTITION_SYM      617
#define PROCEDURE      491
#define LATIN1_GENERAL_CS      335
#define COMPACT_SYM      115
#define MODIFY_SYM      422
#define ERRORS      217
#define VARIANCE      708
#define K_      14
#define CHANGED      94
#define MINUTE      416
#define EACH_SYM      204
#define COMPRESSED_SYM      118
#define LEAVES      342
#define GREEK      272
#define REPEATABLE_SYM      526
#define ASENSITIVE_SYM      51
#define INSERT_METHOD      306
#define MOD      419
#define BOOL_SYM      78
#define TRANSACTIONAL_SYM      658
#define U_      24
#define PROFILE_SYM      494
#define SONAME_SYM      580
#define STDDEV_POP      608
#define AS_SYM      48
#define EXIT_SYM      229
#define ZEROFILL      732
#define PREV_SYM      488
#define T_      23
#define UTF16      697
#define CONNECTION_SYM      124
#define BY_SYM      82
#define MASTER_SSL_CAPATH_SYM      387
#define ARMSCII8      47
#define STDDEV_SAMP      609
#define MONTHNAME      424
#define ROLLUP_SYM      541
#define CHARACTER_SYM      97
#define YEARWEEK      731
#define TIS620      651
#define IS_USED_LOCK      318
#define MEDIUM_SYM      405
#define LOAD      354
#define TRAILING      656
#define TIMESTAMPADD      646
#define DEFINER      181
#define W_      26
#define ROLLBACK      540
#define RESTORE_SYM      532
#define UNCOMPRESS      669
#define TABLESPACE      633
#define ABS      30
#define REAL      508
#define INET_ATON      297
#define PROFILES_SYM      495
#define UNION_SYM      678
#define DECLARE_SYM      178
#define RADIANS      501
#define V_      25
#define MIN_ROWS      415
#define SEPARATOR_SYM      559
#define NONE_SYM      441
#define REVERSE      537
#define TO_DAYS      653
#define INTEGER_SYM      310
#define TEMPTABLE_SYM      636
#define REBUILD_SYM      509
#define HEBREW      278
#define SQL_BUFFER_RESULT      588
#define PERIOD_ADD      474
#define MICROSECOND      411
#define SUPER_SYM      623
#define ALL_FIELDS      745
#define CONTAINS_SYM      127
#define SWAPS_SYM      625
#define Q_      20
#define LOCKS_SYM      359
#define UNCOMPRESSED_LENGTH      670
#define PARSER_SYM      468
#define BLOCK_SYM      77
#define SUBJECT_SYM      616
#define X509_SYM      725
#define REPLACE      527
#define EUCKR      221
#define HANDLER_SYM      275
#define NO_WAIT_SYM      438
#define P_      19
#define INDEX_SYM      295
#define PACK_KEYS_SYM      465
#define NUMERIC_SYM      445
#define CP932      145
#define DES_ENCRYPT      187
#define MACROMAN      374
#define NVARCHAR_SYM      446
#define FALSE_SYM      236
#define MID      412
#define MEMORY_SYM      409
#define HOUR      284
#define THAN_SYM      639
#define CHANGE      93
#define S_      22
#define FLUSH_SYM      248
#define COLUMNS_SYM      111
#define NEGATION      757
#define BIGINT      67
#define EXPANSION_SYM      231
#define BIT_XOR      75
#define VALUE_SYM      701
#define HOUR_MINUTE      286
#define ORDER_SYM      460
#define UNINSTALL_SYM      677
#define IS_FREE_LOCK      316
#define BIN      68
#define BETWEEN      65
#define R_      21
#define POINT_SYM      480
#define MAX_QUERIES_PER_HOUR      398
#define AUTHORS_SYM      56
#define VARYING      709
#define SSL_SYM      599
#define MAKETIME      377
#define DAYNAME      171
#define CASCADE      86
#define FAULTS_SYM      238
#define TYPE_SYM      664
#define SOUNDEX      581
#define NAMES_SYM      431
#define FULL      259
#define INSERT      305
#define PREPARE_SYM      486
#define LOG2      362
#define MASTER_POS_WAIT      384
#define FLOAT_SYM      246
#define EVERY_SYM      224
#define UNDOFILE_SYM      674
#define CONCAT      119
#define KEYBCS2      325
#define OLD_PASSWORD      450
#define UNKNOWN_SYM      681
#define CODE_SYM      105
#define POWER_OP      760
#define VERSION_SYM      710
#define HOUR_SECOND      287
#define PASSWORD      473
#define CASE_SYM      88
#define STR_TO_DATE      612
#define GEOSTD8      266
#define ENCODE      210
#define UJIS      667
#define Y_      28
#define MAKE_SET      375
#define CEILING      91
#define GLOBAL_SYM      269
#define DECIMAL_SYM      177
#define FROM_DAYS      257
#define COPY_SYM      134
#define WEEKOFYEAR      716
#define HP8      288
#define PROCESSLIST_SYM      493
#define AFTER_SYM      39
#define READ_SYM      505
#define ORD      459
#define LOCK      358
#define RELAY_LOG_POS_SYM      517
#define ROWS_SYM      546
#define PRESERVE_SYM      487
#define X_      27
#define ML_COMMENT      777
#define SJIS      574
#define LINESTRING      351
#define SYSDATE      628
#define ALL      43
#define HIGH_PRIORITY      281
#define COERCIBILITY      106
#define OUTFILE      463
#define ASCII_SYM      50
#define DOT      748
#define CURRENT_TIMESTAMP      153
#define RELOAD      520
#define PARTITIONING_SYM      471
#define PARTIAL      469
#define PLUGINS_SYM      479
#define USER_VAR_SUBFIX4      773
#define ISOLATION      319
#define USER_VAR_SUBFIX3      772
#define SIMPLE_SYM      572
#define USER_VAR_SUBFIX2      771
#define USER_VAR_SUBFIX1      770
#define WHILE_SYM      720
#define XOR      728
#define CRC32      147
#define BYTE_SYM      83
#define MUTEX_SYM      428
#define HOST_SYM      282
#define VALUES      702
#define INDEXES      296
#define DYNAMIC_SYM      203
#define ROW_SYM      545
#define ENCLOSED      209
#define DUPLICATE_SYM      202
#define EXECUTE_SYM      226
#define LINEAR_SYM      349
#define HELP_SYM      279
#define ANY      46
#define BEFORE_SYM      62
#define Z_      29
#define ESCAPE_SYM      218
#define CONTRIBUTORS_SYM      130
#define CONTEXT_SYM      128
#define CONV      131
#define VARIABLES      707
#define SIGNED_SYM      571
#define FIXED_SYM      245
#define KEYS      326
#define HASH_SYM      276
#define CAST_SYM      89
#define BINARY      69
#define MAX_SYM      396
#define ENGINE_SYM      214
#define MASTER_CONNECT_RETRY      378
#define MAX_USER_CONNECTIONS_SYM      402
#define RPAD      547
#define SMALLINT      577
#define INSENSITIVE_SYM      304
#define DATAFILE_SYM      158
#define LIKE_SYM      347
#define LAST_DAY      331
#define INNER_SYM      301
#define MULTILINESTRING      425
#define RELAY_LOG_FILE_SYM      516
#define CACHE_SYM      84
#define CREATE      148
#define SUBPARTITIONS_SYM      618
#define RETURN_SYM      535
#define INITIAL_SIZE_SYM      300
#define TIME_TO_SEC      643
#define SPATIAL_SYM      585
#define SQL_CACHE_SYM      589
#define SQLWARNING_SYM      597
#define ACOS      32
#define CPU_SYM      146
#define LATIN2      337
#define LATIN1      336
#define LATIN7      339
#define HEX_DIGIT_FRAGMENT      764
#define DAYOFYEAR      174
#define POWER      484
#define LATIN5      338
#define GEOMETRY_SYM      264
#define DUMPFILE      201
#define RESTRICT      533
#define DES_KEY_FILE      188
#define INSTALL_SYM      307
#define LOW_PRIORITY      369
#define ASIN      52
#define DATE_SUB      162
#define SYSTEM_USER      629
#define UTF8      699
#define LEAVE_SYM      341
#define ALTER      44
#define SENSITIVE_SYM      558
#define NODEGROUP_SYM      440
#define TIME_FORMAT      641
#define LONGBLOB      366
#define TABLE      630
#define VARCHAR      706
#define SESSION_USER      564
#define SUM      622
#define ITERATE_SYM      321
#define MULTIPOLYGON      427
#define WHITE_SPACE      775
#define CHAR_LENGTH      96
#define BITAND      759
#define UNIX_TIMESTAMP      680
#define ANALYZE_SYM      45
#define EVENTS_SYM      223
#define STRING_SYM      615
#define LEFT      343
#define BIT_SYM      74
#define EQ_SYM      738
#define STD      606
#define PLUS      755
#define OUTER      462
#define CP866      144
#define MASTER_USER_SYM      394
#define MINUTE_MICROSECOND      417
#define REMOVE_SYM      521
#define COMPLETION_SYM      116
#define HAVING      277
#define CHECK_SYM      99
#define SEMI      746
#define NOT_EQ      739
#define VERTBAR      758
#define CP852      143
#define DATE_SYM      163
#define EXTENDED_SYM      233
#define STOP_SYM      610
#define CP850      142
#define FROM_BASE64      256
#define FORMAT      252
#define MASTER_PORT_SYM      383
#define CLOSE_SYM      103
#define WEEK      714
#define TYPES_SYM      665
#define UNSIGNED_SYM      683
#define POLYGON      481
#define CHAR      95
#define TERMINATED      637
#define CURTIME      156
#define HOSTS_SYM      283
#define QUOTE      500
#define ENDS_SYM      213
#define REQUIRE_SYM      529
#define QUARTER      497
#define TABLE_CHECKSUM_SYM      631
#define SWE7      626
#define TAN      634
#define PERIOD_DIFF      475
#define HOUR_MICROSECOND      285
#define AND_SYM      736
#define BIG5      66
#define SELECT      557
#define INTO      312
#define UNCOMMITTED_SYM      668
#define DELAYED_SYM      184
#define MAX_CONNECTIONS_PER_HOUR      397
#define LTRIM      372
#define INOUT_SYM      302
#define DAY_MICROSECOND      168
#define SECOND      554
#define FILE_SYM      242
#define LOG10      361
#define UNICODE_SYM      676
#define SQL_NO_CACHE_SYM      591
#define NO_WRITE_TO_BINLOG      439
#define SPECIFIC_SYM      586
#define CIPHER_SYM      101
#define FOR_SYM      249
#define MAX_UPDATES_PER_HOUR      401
#define TABLES      632
#define SHIFT_LEFT      743
#define DUAL_SYM      200
#define TRIGGERS_SYM      660
#define DELETE_SYM      185
#define FOUND_ROWS      253
#define ADDTIME      36
#define MODE_SYM      420
#define PORT_SYM      482
#define ROUND      542
#define ONE_SYM      453
#define KEY_BLOCK_SIZE      323
#define GET_LOCK      268
#define IN_SYM      294
#define DISTINCTROW      196
#define STARTS_SYM      604
#define WHERE      719
#define VAR_SAMP      704
#define ROUTINE_SYM      543
#define UTC_TIMESTAMP      695
#define LIMIT      348
#define SPACE      584
#define ENABLE_SYM      208
#define DATA_SYM      159
#define USAGE      688
#define YEAR_MONTH      730
#define MACCE      373
#define HEX      280
#define MASTER_SSL_KEY_SYM      390
#define COMMA      749
#define OFFSET_SYM      448
#define READ_WRITE_SYM      506
#define WAIT_SYM      712
#define AT_SYM      53
#define CHECKSUM_SYM      100
#define USE_FRM      689
#define FULLTEXT_SYM      260
#define EUCJPMS      220
#define GRANT      270
#define VARBINARY      705
#define OPEN_SYM      454
#define DATETIME      165
#define UNLOCK_SYM      682
#define LONG_SYM      365
#define SOUNDS_SYM      582
#define DEC8      176
#define MODIFIES_SYM      421
#define SQRT      598
#define ACCESSIBLE_SYM      31
#define SUBSTRING      619
#define DAY_SECOND      170
#define BLOB_SYM      76
#define LOCATE      357
#define CROSECOND      149
#define MIGRATE_SYM      413
#define RESOURCES      531
#define INFILE      299
#define LET      740
#define IGNORE_SYM      292
#define DES_DECRYPT      186
#define UTF16LE      696
#define USING_SYM      692
#define LOCAL_SYM      356
#define UNIQUE_SYM      679
#define NOW      443
#define EOF      -1
#define FOREIGN      251
#define PRIVILEGES      490
#define ELSIF_SYM      206
#define ACTION      33
#define MONTH      423
#define UNDEFINED_SYM      671
#define UTC_DATE      693
#define IDENTIFIED_SYM      289
#define USER_VAR      774
#define IMPORT      293
#define WEIGHT_STRING      717
#define SIN      573
#define NO_SYM      437
#define STORAGE_SYM      611
#define AUTO_INCREMENT      57
#define TRUE_SYM      662
#define TEXT_SYM      638
#define SERIAL_SYM      560
#define TINYBLOB      648
#define DAYOFWEEK      173
#define WRAPPER_SYM      723
#define LOGFILE_SYM      363
#define DELAY_KEY_WRITE_SYM      183
#define SLAVE      575
#define SHARE_SYM      567
#define ELT      207
#define PRIMARY_SYM      489
#define AES_DECRYPT      37
#define MEDIUMTEXT      408
#define MERGE_SYM      410
#define UPGRADE_SYM      686
#define KILL_SYM      327
#define LANGUAGE      330
#define CALL_SYM      85
#define MAKEDATE      376
#define REAL_NUMBER      767
#define GRANTS      271
#define TRIM      661
#define REPEAT      525
#define UTC_TIME      694
#define MASTER_SSL_SYM      391
#define DISABLE_SYM      192
#define STATS_AUTO_RECALC      602
#define CONVERT_TZ      133
#define RENAME      522
#define REPLICATION      528
#define OPTION      456
#define JOIN_SYM      322
#define START_SYM      600
#define EXCLUSIVE_SYM      227
#define OPTIONALLY      457
#define OUT_SYM      461
#define RESUME_SYM      534
#define NEXT_SYM      436
#define ENGINES_SYM      215
#define CHARSET      98
#define SOCKET_SYM      579
#define DAYOFMONTH      172
#define BINLOG_SYM      70
#define ASTERISK      750
#define LPAREN      752
#define RECOVER_SYM      510
#define DAY_HOUR      167
#define COLLATION      108
#define RAND      502
#define TIMEDIFF      644
#define FROM_UNIXTIME      258
#define EXISTS      228
#define INET_NTOA      298
#define RETURNS_SYM      536
#define UCS2      666
#define WRITE_SYM      724
#define LOGS_SYM      364
#define SESSION_SYM      563
#define TO_SYM      655
#define CONSISTENT_SYM      125
#define REDUNDANT_SYM      513
#define CLIENT_SYM      102
#define SCHEMA      552
#define ENUM      216
#define DROP      199
#define MASTER_SSL_CERT_SYM      388
#define DISK_SYM      194
#define REVOKE      538
#define PROCESS      492
#define XA_SYM      726
#define SIGN      570
#define UNTIL_SYM      684
#define LOG      360
#define OWNER_SYM      464
#define OR_SYM      735
#define MIN_SYM      414
#define TO_SECONDS      654
#define REPAIR      524
#define WEEKDAY      715
#define COT      136
#define POW      483
#define SECURITY_SYM      556
#define EXP      230
#define DATE_FORMAT      161
#define COS      135
#define EVENT_SYM      222
#define BOOLEAN_SYM      79
#define SAVEPOINT      550
#define FIRST_SYM      244
#define BOTH      80
#define AES_ENCRYPT      38
#define TINYINT      649
#define ATAN      54
#define NOT_SYM      442
#define COMMENT_SYM      112
#define CP1256      140
#define RELEASE_SYM      519
#define CP1251      139
#define WARNINGS      713
#define CP1250      138
#define FUNCTION_SYM      261
#define CURSOR_SYM      155
#define LIST_SYM      352
#define DATE_ADD      160
#define UNDO_BUFFER_SIZE_SYM      672
#define CP1257      141
#define COLUMN_FORMAT      109
#define CONDITION_SYM      122
#define SERVER_SYM      562
#define VAR_POP      703
#define TIMESTAMPDIFF      647
#define TRIGGER_SYM      659
#define FIELD      241
#define SUBTIME      621
#define ESCAPED      219
#define FROM      255
#define DISTINCT      195
#define TEMPORARY      635
#define RTRIM      549
#define PAGE_CHECKSUM_SYM      466
#define SEC_TO_TIME      553
#define FOUND_SYM      254
#define GTH      761
#define ONE_SHOT_SYM      452
#define UPDATE      685
#define AUTOEXTEND_SIZE_SYM      58
#define SCHEDULE_SYM      551
#define RELEASE_LOCK      518
#define INPLACE_SYM      303
#define ALGORITHM_SYM      42
#define DAY_SYM      166
#define EXTRACT      235
#define CUBE_SYM      151
#define EXCHANGE_SYM      225
#define STATS_PERSISTENT      603
#define WORK_SYM      722
#define SET_VAR      742
#define IFNULL      291
#define MAX_SIZE_SYM      400
#define LAST_SYM      333
#define NATIONAL_SYM      432
#define KEY_SYM      324
#define PHASE_SYM      476
#define LTH      762
#define IPC_SYM      315
#define SET_SYM      565
#define DECODE      179
#define STARTING      601
#define CHAIN_SYM      92
#define CEIL      90
#define READ_ONLY_SYM      504
#define WHEN_SYM      718
#define DESC      189
#define SQL_SYM      593
#define CONTINUE_SYM      129
#define SOURCE_SYM      583
#ifdef	EOF
#undef	EOF
#define	EOF	ANTLR3_TOKEN_EOF
#endif

#ifndef TOKENSOURCE
#define TOKENSOURCE(lxr) lxr->pLexer->rec->state->tokSource
#endif

/* End of token definitions for MySQLLexer
 * =============================================================================
 */
/** \} */

#ifdef __cplusplus
}
#endif

#endif

/* END - Note:Keep extra line feed to satisfy UNIX systems */
